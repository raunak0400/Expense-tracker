version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: financeflow-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: financeflow-pro
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - financeflow-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: financeflow-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/financeflow-pro?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-for-development-only
      - JWT_EXPIRE=7d
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - financeflow-network
    command: ["npm", "run", "server"]

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: financeflow-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_APP_NAME=FinanceFlow Pro
      - REACT_APP_VERSION=1.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend
    networks:
      - financeflow-network
    command: ["npm", "run", "client"]
    stdin_open: true
    tty: true

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: financeflow-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - financeflow-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  financeflow-network:
    driver: bridge
